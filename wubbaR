#! /bin/bash
PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin
export PATH
#=================================================================#
#   System Required:  CentOS 6,7, Debian, Ubuntu                   #
#   Description: One click Install wubbaPool Server              #
#   Author: wubbaR                                              #
#   Thanks: @wubbaR <https://t.me/joinchat/K7ES0xMvjK02YzE1>       #
#   Thanks: xxxxxxxxxxxxxxxxxxxx                           #
#   Intro:  hxxxxxxxxxxxxxxxxxxx                              #
#=================================================================#
rm -f wubbaR

clear

echo -e "\033[34m================================================================\033[0m
\033[31m                欢迎使用矿池代理一键脚本                         \033[0m
\033[31m         wubba：https://t.me/joinchat/K7ES0xMvjK02YzE1，  \033[0m
\033[31m                非公网本地搭建 ip地址手动改成内网地址                 \033[0m
\033[31m                vps上的端口也需要打开，不然没网                      \033[0m
\033[31m           即将开始搭建... 建议centos6.8 x64                      \033[0m
\033[34m================================================================\033[0m";
echo

echo

# 安装前准备
clean_installok(){
# -f 参数判断 $file 是否存在
if [ -d "/home/lhteth/" ]; then
  rm-rf /home/lhteth/
  else
  mkdir /home/lhteth/
fi

if [  -d "/home/wuconfigx" ]; then
rm -rf /home/wuconfigx
fi

if [  -e "/etc/init.d/n.sh" ]; then
rm -rf /etc/init.d/n.sh
fi

if [ -e "/usr/bin/nginx" ]; then
rm -rf /usr/bin/nginx
fi
}

#Current folder
clean_installok
cur_dir=`pwd`
wubbaaddr=""
t1=""
wpt=2020
bd=
cd /home/lhteth/
conf_file="/home/lhteth/nginx"
lpt="/home/wuconfigx"
mkdir /home/wuconfigx
touch $lpt/config.txt
touch $lpt/n.sh
# 准备工作
prewget()
{
    # 查看物理CPU个数
    co=$( awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo )
    # 查看每个物理CPU中core的个数(即核数)
    #cb=$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)
    #echo "$co  $cb"
    # 查看逻辑CPU的个数
    t1=$(cat /proc/cpuinfo| grep "processor"| wc -l)
    #线程数
   # ta=$((10#${co}+0))
    #tb=$((10#${cb}+0))
    #echo "$ta + $tb"
    #t1=$[ta * tb]
    #echo $t1

    #进程最大可打开文件数
    ulim=$( ulimit -n )
    #内核
	kern=$( uname -r )  
    #IP
	IP=$(ip addr | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | egrep -v "^192\.168|^172\.1[6-9]\.|^172\.2[0-9]\.|^172\.3[0-2]\.|^10\.|^127\.|^255\.|^0\." | head -n 1)
     if [[ "$IP" = "" ]]; then
    IP=$(wget -qO- -t1 -T2 ipv4.icanhazip.com)
     fi
    #地理位置
	IPaddr=$(curl -s myip.ipip.net | awk -F '：' '{print $3}')
	if [ "$IP" == "" ]; then
		IP=$(curl -s ip.cn | awk -F ' ' '{print $2}' | awk -F '：' '{print $2}')
		IPaddr=$(curl -s ip.cn | awk -F '：' '{print $3}')	
	fi
}

# Check OS
function checkos(){
	[[ -f /etc/redhat-release ]] && os='centos'
	[[ ! -z "`egrep -i debian /etc/issue`" ]] && os='debian'
	[[ ! -z "`egrep -i ubuntu /etc/issue`" ]] && os='ubuntu'
	[[ "$os" == '' ]] && echo 'Error: Your system is not supported to run it!' && exit 1
}

# 安装前准备
clean_installok(){
# -f 参数判断 $file 是否存在
if [ ! -d "/home/lhteth/" ]; then
  mkdir /home/lhteth/
  else
  rm-rf /home/lhteth/
fi

if [  -d "/home/wuconfigx" ]; then
rm -rf /home/wuconfigx
fi

if [  -e "/etc/init.d/n.sh" ]; then
rm -rf /etc/init.d/n.sh
fi

if [ -e "/usr/bin/nginx" ]; then
rm -rf /usr/bin/nginx
fi
}


# 确保只有root用户才能运行脚本
function rootness(){
    if [[ $EUID -ne 0 ]]; then
       echo "Error:此脚本必须以root用户身份运行!" 1>&2
       exit 1
    fi
}

# Check OS
function checkos(){
	[[ -f /etc/redhat-release ]] && os='centos'
	[[ ! -z "`egrep -i debian /etc/issue`" ]] && os='debian'
	[[ ! -z "`egrep -i ubuntu /etc/issue`" ]] && os='ubuntu'
	[[ "$os" == '' ]] && echo 'Error: Your system is not supported to run it!' && exit 1
}

# Get version
function getversion(){
    if [[ -s /etc/redhat-release ]];then
        grep -oE  "[0-9.]+" /etc/redhat-release
    else    
        grep -oE  "[0-9.]+" /etc/issue
    fi    
}

# CentOS version
function centosversion(){
    local code=$1
    local version="`getversion`"
    local main_ver=${version%%.*}
    if [ $main_ver == $code ];then
        return 0
    else
        return 1
    fi        
}

# Disable selinux
function disable_selinux(){
if [ -s /etc/selinux/config ] && grep 'SELINUX=enforcing' /etc/selinux/config; then
    sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
    setenforce 0
fi
}

# Pre-installation settings
function pre_install(){
    # Not support CentOS 5
    if centosversion 5; then
        echo "不支持CentOS 5，请将操作系统更改为CentOS 6+/Debian 7+/Ubuntu 12+，然后重试."
        exit 1
    fi
    # 设置矿池地址
    while true
    do
    while true
    do
    poolnumber=`expr $poolnumber + 1`;
    echo -e  "请输入\033[31m$poolnumber\033[0m号矿池代理地:"
    read -p "(默认flexpool池: eth-hk.flexpool.io:5555):" wubbaaddr
    [ -z "$wubbaaddr" ] && wubbaaddr="eth-hk.flexpool.io:5555"

    expr ${wubbaaddr#*:} + 0 &>/dev/null
    if [ $? -eq 0 ]; then
        if [ ${wubbaaddr#*:} -ge 1 ] && [ ${wubbaaddr#*:} -le 65535 ]; then
            echo
            echo "$wubbaaddr" >> $lpt/config.txt
            echo "---------------------------"
            echo "paddr = $wubbaaddr"
            echo "---------------------------"
            echo
            break
        else
            echo "输入错误,举例：（eth.beepool.io:1234）！"
            poolnumber=
        fi
    else
        echo "输入错误,举例：（eth.beepool.io:1234）！"
        poolnumber=
    fi
done

    # 设置矿池端口
    while true
    do
    echo -e "请输入\033[31m$poolnumber\033[0m号矿池连接端口,不设置将默认$wpt端口:"
    read -p "(默认自动设置端口为$wpt):" wubbaport
    [ -z "$wubbaport" ] && wubbaport="$wpt"
    
    expr $wubbaport + 0 &>/dev/null
    if [ $? -eq 0 ]; then
        if [ $wubbaport -ge 1 ] && [ $wubbaport -le 65535 ]; then
            echo
            echo "$wubbaport" >> $lpt/config.txt
            echo "---------------------------"
            echo "port = $wubbaport"
            echo "---------------------------"
            echo
            wpt=`expr $wpt + 1`;
            break
        else
            echo "输入错误，请输入1-65535之间的数字！"
        fi
    else
        echo "输入错误，请输入1-65535之间的数字！"
    fi
    done

    echo -e "\033[31m继续添加矿池[y]？,不设置将默认[否]:\033[0m";
    read -p "(默认停止添加其他矿池):" ispool
    if [ -z "$ispool" ];then
        break
    fi
    done

	if [ "$os" == 'centos' ]; then
		#yum -y install make gcc gcc-c++
        yum install wget gcc -y
        yum install  curl curl-devel zlib zlib-devel pcre pcre-devel openssl openssl-devel -y
	else
        apt install wget -y           
        apt install gcc -y 
        apt install curl -y 
        apt install curl-devel -y 
        apt install libpcre3 libpcre3-dev -y
        apt install zlib1g zlib1g-dev -y
        apt install openssl libssl-dev -y
        sudo apt-get install sysv-rc-conf -y
	fi
    cd $cur_dir
}
# 下载文件
function download_files(){
    # 下载nginx文件
    if ! wget --no-check-certificate -O nginx-1.21.3.tar.gz https://nginx.org/download/nginx-1.21.3.tar.gz; then
        echo "下载nginx文件失败！"
        exit 1
    fi
}

# 防火墙设置
function firewall_set(){
    echo "防火墙设置启动..."
    if centosversion 6; then
        /etc/init.d/iptables status > /dev/null 2>&1
        if [ $? -eq 0 ]; then
            iptables -L -n | grep '${wubbaport}' | grep 'ACCEPT' > /dev/null 2>&1
            if [ $? -ne 0 ]; then
                wp_array=($(awk '{print}' $lpt/config.txt))
                len=${#wp_array[@]}
                for((i=0;i<len;i+=2))
                    do
                      wpip=${wp_array[i]}
                      wpport=${wp_array[i+1]}
                      iptables -I INPUT -m state --state NEW -m tcp -p tcp --dport ${wpport} -j ACCEPT
                      iptables -I INPUT -m state --state NEW -m tcp -p tcp --dport ${wpip#*:} -j ACCEPT
                       echo "端口是:$wpport"
                       echo "ip是:$wpip"
                 done
                      /etc/init.d/iptables save
                      /etc/init.d/iptables restart
            else
                echo "port ${wubbaport} 设置完成."
            fi
        else
            echo "警告：iptables可能已关闭或未安装，如有必要，请手动设置."
        fi
    elif centosversion 7; then
        systemctl status firewalld > /dev/null 2>&1
        if [ $? -eq 0 ];then
            wp_array=($(awk '{print}' $lpt/config.txt))
            len=${#wp_array[@]}
            for((i=0;i<len;i+=2))
            do
            wpip=${wp_array[i]}
            wpport=${wp_array[i+1]}
            firewall-cmd --permanent --zone=public --add-port=${wport}/tcp
            firewall-cmd --permanent --zone=public --add-port=${wpip#*:}/tcp
            echo "端口是:$wpport"
            echo "ip是:$wpip"
            done
                firewall-cmd --reload
        else
            echo "Firewalld看起来没有运行，请尝试启动..."
            systemctl start firewalld
            if [ $? -eq 0 ];then
            wp_array=($(awk '{print}' $lpt/config.txt))
            len=${#wp_array[@]}
            for((i=0;i<len;i+=2))
            do
            wpip=${wp_array[i]}
            wpport=${wp_array[i+1]}
            firewall-cmd --permanent --zone=public --add-port=${wpport}/tcp
            firewall-cmd --permanent --zone=public --add-port=${wpip#*:}/tcp
             echo "端口是:$wpport"
            echo "ip是:$wpip"
            done
                firewall-cmd --reload
            else
                echo "WARNING: 尝试启动防火墙失败。如有必要，请手动启用端口 ${wubbaport} ."
            fi
        fi
    fi
    echo "防火墙设置完成..."
}

# Config wubbaPool
function config_wubba(){
    checkos
    prewget
    echo "
worker_processes ${t1};
events {
    use epoll;
    accept_mutex on;
    multi_accept on;
    worker_connections ${ulim};
}
stream {
 " >> $lpt/nginx.conf


wp_array=($(awk '{print}' $lpt/config.txt))
len=${#wp_array[@]}
for((i=0;i<len;i+=2))
do
wpip=${wp_array[i]}
wpport=${wp_array[i+1]}

echo "
     upstream backend${bd} {
        hash \$remote_addr consistent;
        server ${wpip} max_fails=3 fail_timeout=10s;
     }
     server {
         listen ${wpport};
         proxy_connect_timeout 20s;
         proxy_pass backend${bd};
     }" >> $lpt/nginx.conf
bd=`expr $bd + 1`;
done
echo "}" >> $lpt/nginx.conf
}


# 开机自启
function config_init(){
    checkos
    cat > $lpt/n.sh<<-EOF
#!/bin/sh
#
#chkconfig: 2345 80 90
#description: nginx
start() {
    /home/lhteth/nginx/sbin/nginx
}
reload() {
    /home/lhteth/nginx/sbin/nginx -s reload
}
stop() {
    /home/lhteth/nginx/sbin/nginx -s quit
}
case "\$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  reload)
    reload
    ;;
  *)
echo $"Usage: $0 {start|stop|restart|reload}"
exit 1
esac
EOF
          cp $lpt/n.sh /etc/init.d/
           chmod 777  /etc/init.d/n.sh
	if [ "$os" == 'centos' ]; then
        echo "etc/init.d/n.sh start" > /etc/rc.d/rc.local 
        chmod +x /etc/rc.d/rc.local 
	else

    
       sudo update-rc.d n.sh defaults 90
	fi

}


# Install wubbaPool
function install_pool(){
    # Install nginx
    useradd www
    chmod 777 nginx-1.21.3.tar.gz
    tar zxf nginx-1.21.3.tar.gz
    cd $cur_dir/nginx-1.21.3
    ./configure --prefix=/home/lhteth/nginx --user=www --group=www --with-http_ssl_module --with-http_flv_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-poll_module
    sleep 1
    make
    sleep_time 79
    make install
    sleep_time 89
    ln -s /home/lhteth/nginx/sbin/nginx /usr/bin
    # Install wubbaPool
        cd $cur_dir
        nginx -v
        # Run wubbaPool in the background
        if [ $? -eq 0 ]; then
        config_init
        prewget
        clear
        sleep 1
        config_wubba
        cd $conf_file
        echo "lpt路径：$lpt/"
        echo "conf_file路径：$conf_file/wuconfigx"
        mv $lpt/ $conf_file/
        cp $conf_file/wuconfigx/nginx.conf $conf_file/conf/
        sleep_time 99
        echo
        echo "恭喜你，wubbaPool安装完成！"
        poolnumbe=
        wp_array=($(awk '{print}' $conf_file/wuconfigx/config.txt))
        len=${#wp_array[@]}
        for((i=0;i<len;i+=2))
        do
        poolnumbe=`expr $poolnumbe + 1`;
        wpip=${wp_array[i]}
        wpport=${wp_array[i+1]}
        echo -e "本地矿池节点$poolnumbe: \033[31m ${IP}:${wpport} \033[0m"
        echo -e "远程矿池地址$poolnumbe: \033[31m ${wpip} \033[0m";
        done
        echo
        echo "地理位置：${IPaddr}"
        echo "线程数：${t1}."
        echo "进程最大可打开文件数：${ulim}."
        echo "bug提交群:https://jq.qq.com/?_wv=1027&k=wgQnoL7S "
        echo "启动命令 :nginx -s start, ，重启命令："
        echo "停止命令 ：nginx -s stop"
        echo "重启命令： nginx -s restart"
        echo "配置重载： nginx -s reload"
        echo "另外：一键/修改/更新/web控制台等，有时间放进来"
        echo ""
        echo "=================稍等片刻！================"
        echo ""
        echo "安装完毕!"
        echo
        echo ""
    else
        echo "wubbaPool安装失败!"
        install_cleanup
        exit 1
    fi

    echo "请稍后手动开启nginx（start nginx）"
}


# 清理安装文件
function install_cleanup(){
    cd $cur_dir
    rm -f nginx-1.21.3.tar.gz
    rm -rf nginx-1.21.3
}


# 卸载
function uninstall_wubba(){
    printf "你确定卸载wubbaPool？ (y/n) "
    printf "\n"
    read -p "(Default: n):" answer
    if [ -z $answer ]; then
        answer="n"
    fi
    if [ "$answer" = "y" ]; then
        nginx -s stop > /dev/null 2>&1
        if [ $? -eq 0 ]; then
        ps -ef |grep nginx 
            echo"停止成功"
        fi
        checkos
	if [ "$os" == 'centos' ]; then
            chkconfig --del wubba
        else
            update-rc.d -f wubba remove
        fi

        rm -rf /home/lhteth/
        rm -f /etc/init.d/wubba
        rm -rf /usr/bin/nginx
        echo "wubbaPool 卸载成功!"
    else
        echo "卸载已取消，无需执行任何操作"
    fi
}

function sleep_time(){

total_stdy="$(($(stty size|cut -d' ' -f1)))"
total_stdx="$(($(stty size|cut -d' ' -f2)))"

head="Progress bar: "
total=$[${total_stdx} - ${#head}*2]

i=$1
loop=100
while [ $i -lt $loop ]
do
    let i=i+1
    
    per=$[${i}*${total}/${loop}]
    remain=$[${total} - ${per}]
    printf "\r\e[${total_stdy};0H${head}\e[42m%${per}s\e[47m%${remain}s\e[00m" "" ""
    sleep 0.1
done

echo ""
}

# 安装
function install_wubba(){
    checkos
    rootness
    disable_selinux
    pre_install
    download_files
    install_pool
    echo "正在清理 。"
	if [ "$os" == 'centos' ]; then
        firewall_set > /dev/null 2>&1
    fi

    install_cleanup	 
    echo "请输入   nginx   开启服务器  如果有问题 请关闭再次开启 。"
    exit
}


install_wubba
# Initialization step 初始化
#action=$1
#[ -z $1 ] && action=install
#case "$action" in
#install)
 #   install_wubba
 #   ;;
#uninstall)
#    uninstall_wubba
#    ;;
#*)
 #   echo "参数错误! [${action} ]"
 #   echo "用法: `basename $0` {install|uninstall}"
 #  ;;
#esac
