#! /bin/bash
PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin
export PATH
#=================================================================#
#   System Required:  CentOS 6,7, Debian, Ubuntu                   #
#   Description: One click Install wubbaPool Server              #
#   Author: wubbaR                                              #
#   Thanks: @wubbaR <https://t.me/joinchat/K7ES0xMvjK02YzE1>       #
#   Thanks: xxxxxxxxxxxxxxxxxxxx                           #
#   Intro:  hxxxxxxxxxxxxxxxxxxx                              #
#=================================================================#
#rm -f wubbaR
sh_ver="1.0.5"
LANG=zh_CN.UTF-8
clear

echo -e "\033[34m================================================================\033[0m
\033[31m                欢迎使用矿池代理一键脚本                         \033[0m
\033[31m         wubba：https://t.me/joinchat/K7ES0xMvjK02YzE1，  \033[0m
\033[31m                非公网本地搭建 ip地址手动改成内网地址                 \033[0m
\033[31m                vps上的端口也需要打开，不然没网                      \033[0m
\033[31m           即将开始搭建... 建议centos6.8 x64                      \033[0m
\033[34m================================================================\033[0m";
echo
echo

#控制
start() {
    /etc/init.d/xn.sh start
    if [ $? -eq 0 ]; then
    menu_status
    else
    killall nginx
    /etc/init.d/xn.sh start
    menu_status
    fi
}
stop() {
        /etc/init.d/xn.sh stop
        if [ $? -eq 0 ]; then
        menu_status
        else
        killall nginx
        /etc/init.d/xn.sh stop
        menu_status
    fi
}
restart() {
        /etc/init.d/xn.sha restart
        if [ $? -eq 0 ]; then
        menu_status
        else
        killall nginx
        /etc/init.d/xn.sh restart
        menu_status
    fi
}


# 更新本脚本
function upgradeScript(){
    wget -Nq --no-check-certificate -O ./wubbaR "https://raw.githubusercontent.com/lihuate/linux-ethpool-proxy-One-click-Install-wubbaPool-Server/main/wubbaR"
    green " 本脚本升级成功! "
    chmod +x ./wubbaR
    sleep 2s
    exec "./wubbaR"
}


aadminaddr=`pwd`

# 清理安装文件
function install_cleanup(){
    rm -f $aadminaddr/nginx-1.21.3.tar.gz >& /dev/null
    rm -rf $aadminaddr/nginx-1.21.3 >& /dev/null
    rm -rf /home/wuconfigx >& /dev/null
}

# 安装前准备
clean_installok(){
    install_cleanup
#如果小于65535设置ulimits：
    ulio=`ulimit -n`
    if [ $ulio -lt 65535 ]; then
    ulimit -SHn 65535
    fi
    mkdir /home/wuconfigx >& /dev/null
    touch /home/wuconfigx/config.txt >& /dev/null
    touch /home/wuconfigx/xn.sh >& /dev/null
    touch /home/lhteth/nginx/conf/nginx.conf >& /dev/null
    clear
}

#Current folder
clean_installok
cur_dir=`pwd`
wubbaaddr=""
t1=""
wpt=2020
bd=
cd /home/lhteth/ >& /dev/null
conf_file="/home/lhteth/nginx"
lpt="/home/wuconfigx"
config_nginx_file="/home/lhteth/nginx/conf/nginx.conf"

Green_font_prefix="\033[32m" && Red_font_prefix="\033[31m" && Green_background_prefix="\033[42;37m" && Red_background_prefix="\033[41;37m" && Font_color_suffix="\033[0m"
Info="${Green_font_prefix}[信息]${Font_color_suffix}"
Error="${Red_font_prefix}[错误]${Font_color_suffix}"
Tip="${Green_font_prefix}[注意]${Font_color_suffix}"


function edit_url(){

lpt="/home/lhteth/nginx/wuconfigx"
}
# 准备工作
prewget()
{
    # 查看物理CPU个数
    co=$( awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo )
    # 查看每个物理CPU中core的个数(即核数)
    #cb=$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)
    #echo "$co  $cb"
    # 查看逻辑CPU的个数
    t1=$(cat /proc/cpuinfo| grep "processor"| wc -l)
    #线程数
   # ta=$((10#${co}+0))
    #tb=$((10#${cb}+0))
    #echo "$ta + $tb"
    #t1=$[ta * tb]
    #echo $t1

    #进程最大可打开文件数
    ulim=$( ulimit -n )
    #内核
	kern=$( uname -r )  
    #IP
	IP=$(ip addr | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | egrep -v "^192\.168|^172\.1[6-9]\.|^172\.2[0-9]\.|^172\.3[0-2]\.|^10\.|^127\.|^255\.|^0\." | head -n 1)
     if [[ "$IP" = "" ]]; then
    IP=$(wget -qO- -t1 -T2 ipv4.icanhazip.com)
     fi
    #地理位置
	IPaddr=$(curl -s myip.ipip.net | awk -F '：' '{print $3}')
	if [ "$IP" == "" ]; then
		IP=$(curl -s ip.cn | awk -F ' ' '{print $2}' | awk -F '：' '{print $2}')
		IPaddr=$(curl -s ip.cn | awk -F '：' '{print $3}')	
	fi
}

# Check OS
function checkos(){
	[[ -f /etc/redhat-release ]] && os='centos'
	[[ ! -z "`egrep -i debian /etc/issue`" ]] && os='debian'
	[[ ! -z "`egrep -i ubuntu /etc/issue`" ]] && os='ubuntu'
	[[ "$os" == '' ]] && echo 'Error: Your system is not supported to run it!' && exit 1
}


# 确保只有root用户才能运行脚本
function rootness(){
    if [[ $EUID -ne 0 ]]; then
       echo "Error:此脚本必须以root用户身份运行!" 1>&2
       exit 1
    fi
}

#查看pid
check_pid(){
	PID=`ps -ef |grep -v grep | grep nginx |awk '{print $2}'`
}

# Check OS
function checkos(){
	[[ -f /etc/redhat-release ]] && os='centos'
	[[ ! -z "`egrep -i debian /etc/issue`" ]] && os='debian'
	[[ ! -z "`egrep -i ubuntu /etc/issue`" ]] && os='ubuntu'
	[[ "$os" == '' ]] && echo 'Error: Your system is not supported to run it!' && exit 1
}

# Get version
function getversion(){
    if [[ -s /etc/redhat-release ]];then
        grep -oE  "[0-9.]+" /etc/redhat-release
    else    
        grep -oE  "[0-9.]+" /etc/issue
    fi    
}

# CentOS version
function centosversion(){
    local code=$1
    local version="`getversion`"
    local main_ver=${version%%.*}
    if [ $main_ver == $code ];then
        return 0
    else
        return 1
    fi        
}

# Disable selinux
function disable_selinux(){
if [ -s /etc/selinux/config ] && grep 'SELINUX=enforcing' /etc/selinux/config; then
    sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
    setenforce 0
fi
}

#强制关闭
function killall_nginx(){
killall nginx

}

#软件环境
function install_app(){
	if [ "$os" == 'centos' ]; then
		#yum -y install make gcc gcc-c++
        yum install wget gcc -y
        yum install  curl curl-devel zlib zlib-devel pcre pcre-devel openssl openssl-devel -y

        if [ $? -ne 0 ]; then
         # Notyumreper CentOS 5
    if centosversion 6; then
        echo "换腾讯源."
        mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup
        wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.cloud.tencent.com/repo/centos6_base.repo    
        sed -i 's#http#https#g' /etc/yum.repos.d/CentOS-Base.repo
        yum clean all
        yum makecache
        exit 1
        fi
    fi

	else
        apt install wget -y           
        apt install gcc -y 
        apt install curl -y 
        apt install curl-devel -y 
        apt install libpcre3 libpcre3-dev -y
        apt install zlib1g zlib1g-dev -y
        apt install openssl libssl-dev -y
        apt install sysv-rc-conf -y
	fi
}

# Pre-installation settings
function pre_install(){
    # Not support CentOS 5
    if centosversion 5; then
        echo "不支持CentOS 5，请将操作系统更改为CentOS 6+/Debian 7+/Ubuntu 12+，然后重试."
        exit 1
    fi
    # 设置矿池地址
    while true
    do
    while true
    do
    poolnumber=`expr $poolnumber + 1`;
    echo -e  "请输入\033[31m$poolnumber\033[0m号矿池代理地:"
    read -p "(默认flexpool池: eth-hk.flexpool.io:5555):" wubbaaddr
    [ -z "$wubbaaddr" ] && wubbaaddr="eth-hk.flexpool.io:5555"

    expr ${wubbaaddr#*:} + 0 &>/dev/null
    if [ $? -eq 0 ]; then
        if [ ${wubbaaddr#*:} -ge 1 ] && [ ${wubbaaddr#*:} -le 65535 ]; then
            echo
            echo "$wubbaaddr" >> /home/wuconfigx/config.txt
            echo "---------------------------"
            echo "paddr = $wubbaaddr"
            echo "---------------------------"
            echo
            break
        else
            echo "输入错误,举例：（eth.beepool.io:1234）！"
            poolnumber=
        fi
    else
        echo "输入错误,举例：（eth.beepool.io:1234）！"
        poolnumber=
    fi
done

    # 设置矿池端口  [注意]"
    while true
    do
    echo -e "请输入\033[31m$poolnumber\033[0m号矿池连接端口,不设置将默认$wpt端口:"
    read -p "(默认自动设置端口为$wpt):" wubbaport
    [ -z "$wubbaport" ] && wubbaport="$wpt"
    
    expr $wubbaport + 0 &>/dev/null
    if [ $? -eq 0 ]; then
        if [ $wubbaport -ge 1 ] && [ $wubbaport -le 65535 ]; then
            echo
            echo "$wubbaport" >> /home/wuconfigx/config.txt
            echo "---------------------------"
            echo "port = $wubbaport"
            echo "---------------------------"
            echo
            wpt=`expr $wpt + 1`;
            break
        else
            echo "输入错误，请输入1-65535之间的数字！"
        fi
    else
        echo "输入错误，请输入1-65535之间的数字！"
    fi
    done

    echo -e "\033[31m继续添加矿池[y]？,不设置将默认[否]:\033[0m";
    read -p "(默认停止添加其他矿池):" ispool
    if [ -z "$ispool" ];then
        break
    fi
    done
    cd $cur_dir
}
# 下载文件
function download_files(){
    # 下载nginx文件
    if ! wget --no-check-certificate -O nginx-1.21.3.tar.gz https://nginx.org/download/nginx-1.21.3.tar.gz; then
        echo "下载nginx文件失败！"

            if ! wget --no-check-certificate -O nginx-1.21.3.tar.gz http://nginx.org/download/nginx-1.21.3.tar.gz; then
        echo "下载nginx文件失败！"
        exit 1
    fi
        exit 1
    fi
}

# 防火墙设置firewall_set_drop  firewall_set
function firewall_set(){
    echo "防火墙设置启动..."
    if centosversion 6; then
        /etc/init.d/iptables status > /dev/null 2>&1
        if [ $? -eq 0 ]; then
            uname-a
            if [ $? -ne 0 ]; then
                wp_array=($(awk '{print}' /home/wuconfigx/config.txt))
                len=${#wp_array[@]}
                for((i=0;i<len;i+=2))
                    do
                      wpip=${wp_array[i]}
                      wpport=${wp_array[i+1]}                 
                      iptables -L -n | grep '${wpport}' | grep 'ACCEPT' > /dev/null 2>&1
                      if [ $? -eq 0 ]; then
                      iptables -I INPUT -m state --state NEW -m tcp -p tcp --dport ${wpport} -j ACCEPT
                      else
                      echo "已经关闭或防火墙有问题"
                      fi

                      iptables -L -n | grep '${wpip#*:}' | grep 'ACCEPT' > /dev/null 2>&1
                      if [ $? -eq 0 ]; then
                      iptables -I INPUT -m state --state NEW -m tcp -p tcp --dport ${wpip#*:} -j ACCEPT
                      else
                      echo "已经关闭或有问题"
                      fi


                       echo "端口是:$wpport"
                       echo "ip是:$wpip"
                 done
                      /etc/init.d/iptables save
                      /etc/init.d/iptables restart
            else
                echo "port ${wubbaport} 设置完成."
            fi
        else
            echo "警告：iptables可能已关闭或未安装，如有必要，请手动设置."
        fi
    elif centosversion 7; then
        systemctl status firewalld > /dev/null 2>&1
        if [ $? -eq 0 ];then
            wp_array=($(awk '{print}' /home/wuconfigx/config.txt))
            len=${#wp_array[@]}
            for((i=0;i<len;i+=2))
            do
            wpip=${wp_array[i]}
            wpport=${wp_array[i+1]}
            firewall-cmd --permanent --zone=public --add-port=${wport}/tcp
            firewall-cmd --permanent --zone=public --add-port=${wpip#*:}/tcp
            echo "端口是:$wpport"
            echo "ip是:$wpip"
            done
                firewall-cmd --reload
        else
            echo "Firewalld看起来没有运行，请尝试启动..."
            systemctl start firewalld
            if [ $? -eq 0 ];then
            wp_array=($(awk '{print}' /home/wuconfigx/config.txt))
            len=${#wp_array[@]}
            for((i=0;i<len;i+=2))
            do
            wpip=${wp_array[i]}
            wpport=${wp_array[i+1]}
            firewall-cmd --permanent --zone=public --add-port=${wpport}/tcp
            firewall-cmd --permanent --zone=public --add-port=${wpip#*:}/tcp
             echo "端口是:$wpport"
            echo "ip是:$wpip"
            done
                firewall-cmd --reload
            else
                echo "WARNING: 尝试启动防火墙失败。如有必要，请手动启用端口 ${wpport} ."
                echo "WARNING: 尝试启动防火墙失败。如有必要，请手动启用端口 ${{wpip#*:} ."
            fi
        fi
    fi
    echo "防火墙设置完成..."
}




# 防火墙设置关闭
function firewall_set_drop(){
    echo "防火墙设置启动..."
    if centosversion 6; then
        /etc/init.d/iptables status > /dev/null 2>&1
        if [ $? -eq 0 ]; then
            uname-a
            if [ $? -ne 0 ]; then
                wp_array=($(awk '{print}' /home/wuconfigx/config.txt))
                len=${#wp_array[@]}
                for((i=0;i<len;i+=2))
                    do
                      wpip=${wp_array[i]}
                      wpport=${wp_array[i+1]}
                      iptables -L -n | grep '${wpport}' | grep 'DROP' > /dev/null 2>&1
                      if [ $? -eq 0 ]; then
                      iptables -I INPUT -m state --state NEW -m tcp -p tcp --dport ${wpport} -j DROP
                      else
                      echo "已经关闭或防火墙有问题"
                      fi

                      iptables -L -n | grep '${wpip#*:}' | grep 'DROP' > /dev/null 2>&1
                      if [ $? -eq 0 ]; then
                      iptables -I INPUT -m state --state NEW -m tcp -p tcp --dport ${wpip#*:} -j DROP
                      else
                      echo "已经关闭或有问题"
                      fi
                       echo "端口是:$wpport"
                       echo "ip是:$wpip"
                 done
                      /etc/init.d/iptables save
                      /etc/init.d/iptables restart
            else
                echo "port ${wubbaport} 设置完成."
            fi
        else
            echo "警告：iptables可能已关闭或未安装，如有必要，请手动设置."
        fi
    elif centosversion 7; then
        systemctl status firewalld > /dev/null 2>&1
        if [ $? -eq 0 ];then
            wp_array=($(awk '{print}' /home/wuconfigx/config.txt))
            len=${#wp_array[@]}
            for((i=0;i<len;i+=2))
            do
            wpip=${wp_array[i]}
            wpport=${wp_array[i+1]}
            firewall-cmd --permanent --zone=public --remove-port=${wport}/tcp
            firewall-cmd --permanent --zone=public --remove-port=${wpip#*:}/tcp
            echo "端口是:$wpport"
            echo "ip是:$wpip"
            done
                firewall-cmd --reload
        else
            echo "Firewalld看起来没有运行，请尝试启动..."
            systemctl start firewalld
            if [ $? -eq 0 ];then
            wp_array=($(awk '{print}' /home/wuconfigx/config.txt))
            len=${#wp_array[@]}
            for((i=0;i<len;i+=2))
            do
            wpip=${wp_array[i]}
            wpport=${wp_array[i+1]}
            firewall-cmd --permanent --zone=public --remove-port=${wpport}/tcp
            firewall-cmd --permanent --zone=public --remove-port=${wpip#*:}/tcp
             echo "端口是:$wpport"
            echo "ip是:$wpip"
            done
                firewall-cmd --reload
            else
                echo "WARNING: 尝试启动防火墙失败。如有必要，请手动启用端口 ${wpport} ."
                echo "WARNING: 尝试启动防火墙失败。如有必要，请手动启用端口 ${{wpip#*:} ."
            fi
        fi
    fi
    echo "防火墙设置完成..."
}



# Config wubbaPool
function config_wubba(){
    checkos
    prewget
    rm -rf  /home/lhteth/nginx/conf/nginx.conf
    touch /home/lhteth/nginx/conf/nginx.conf
    echo "
worker_processes ${t1};
events {
    use epoll;
    accept_mutex on;
    multi_accept on;
    worker_connections ${ulim};
}
stream {
 " >> /home/lhteth/nginx/conf/nginx.conf


wp_array=($(awk '{print}' /home/lhteth/nginx/wuconfigx/config.txt))
len=${#wp_array[@]}
for((i=0;i<len;i+=2))
do
wpip=${wp_array[i]}
wpport=${wp_array[i+1]}

echo "
     upstream backend${bd} {
        hash \$remote_addr consistent;
        server ${wpip} max_fails=3 fail_timeout=10s;
     }
     server {
         listen ${wpport};
         proxy_connect_timeout 20s;
         proxy_pass backend${bd};
     }" >> /home/lhteth/nginx/conf/nginx.conf
bd=`expr $bd + 1`;
done
echo "}" >> /home/lhteth/nginx/conf/nginx.conf
}


# 查看
function view_pool_config(){
    clear
    prewget
	if [[ -e ${config_nginx_file} ]]; then
        poolnumbe=
        wp_array=($(awk '{print}' /home/lhteth/nginx/wuconfigx/config.txt))
        len=${#wp_array[@]}
        for((i=0;i<len;i+=2))
        do
        poolnumbe=`expr $poolnumbe + 1`;
        wpip=${wp_array[i]}
        wpport=${wp_array[i+1]}
        echo -e "本地矿池节点$poolnumbe: \033[31m ${IP}:${wpport} \033[0m"
        echo -e "远程矿池地址$poolnumbe: \033[31m ${wpip} \033[0m";
        done
        echo
        echo -e "地理位置：${IPaddr}"
        echo -e "线程数：${t1}."
        echo -e "进程最大可打开文件数：${ulim}."
        echo ""
        else
        echo
        echo  -e "请先安装！ $Tip "
        echo
        fi
}


#重置配置
function config_inithok(){
    addr_true=$conf_file/wuconfigx/ture
    if [[ -e ${addr_true} ]]; then
    cp /home/lhteth/nginx/wuconfigx/config.txt.bak /home/lhteth/nginx/wuconfigx/config.txt
    nginx -t
        if [ $? -eq 0 ]; then
          echo -e " 当前状态: ${Green_font_prefix}成功${Font_color_suffix} "
          fi
    fi
     echo -e " 当前状态:  ${Red_font_prefix}失败${Font_color_suffix} "
}



# 修改
function config_edit(){
    checkos
    edit_url
	if [[ -e ${config_nginx_file} ]]; then
    cp /home/lhteth/nginx/wuconfigx/config.txt /home/lhteth/nginx/wuconfigx/config.txt.bak &>/dev/null
    prewget
    firewall_set_drop
    rm -rf /home/lhteth/nginx/wuconfigx/config.txt &>/dev/null
    rm -rf /home/lhteth/nginx/conf/nginx.conf &>/dev/null
    rm -rf /home/wuconfigx/config.txt &>/dev/null
    pre_install
    cp /home/wuconfigx/config.txt  /home/lhteth/nginx/wuconfigx/config.txt &>/dev/null
    config_wubba
    rm -rf /home/wuconfigx/
    nginx -t
    if [ $? -eq 0 ]; then
    cp /home/lhteth/nginx/wuconfigx/config.txt /home/lhteth/nginx/wuconfigx/config.txt.bak &>/dev/null
    touch /home/lhteth/nginx/wuconfigx/ture &>/dev/null
    cd /home/lhteth/nginx/sbin/
        killall_nginx
            if [ $? -eq 0 ]; then
          echo -e " 当前状态: ${Green_font_prefix}关闭成功${Font_color_suffix} "
          else
          echo -e " 当前状态: ${Red_font_prefix}已关闭${Font_color_suffix}  "
          fi
    start
          if [ $? -eq 0 ]; then
          echo -e " 当前状态: ${Green_font_prefix}nginx成功${Font_color_suffix} "
          view_pool_config
          else
          echo -e " 当前状态: ${Red_font_prefix}nginx失败，请手动开启${Font_color_suffix}  "
          fi
    echo "succeed"
else
    mv /home/lhteth/nginx/wuconfigx/config.txt.bak /home/lhteth/nginx/wuconfigx/config.txt
    config_wubba
    echo "failed配置已恢复"
fi
        firewall_set
        else
        echo
        echo  -e "请先安装！ $Tip "
        echo
        fi
}


# 开机自启
function config_init(){
    checkos
    cat > /home/lhteth/nginx/wuconfigx/xn.sh<<-EOF
#!/bin/sh
#
#chkconfig: 2345 80 90
#description: nginx
start() {
    /home/lhteth/nginx/sbin/nginx
}
reload() {
    /home/lhteth/nginx/sbin/nginx -s reload
}
stop() {
    /home/lhteth/nginx/sbin/nginx -s quit
}
case "\$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  reload)
    reload
    ;;
  *)
echo $"Usage: $0 {start|stop|restart|reload}"
exit 1
esac
EOF
          cp /home/lhteth/nginx/wuconfigx/xn.sh /etc/init.d/xn.sh
           chmod 777  /etc/init.d/xn.sh
	if [ "$os" == 'centos' ]; then
        echo "etc/init.d/xn.sh start" > /etc/rc.d/rc.local 
        chmod +x /etc/rc.d/rc.local 
	else

    
       sudo update-rc.d etc/init.d/xn.sh defaults 90 
	fi

}




#关闭防火墙特定端口
function iptfw_drop(){
 iptfw=$1
  iptables -I INPUT -m state --state NEW -m tcp -p tcp --dport  -j ${iptfw}
  iptables -I INPUT -m state --state NEW -m tcp -p tcp --dport  -j ${iptfw}
}

# Install wubbaPool
function install_pool(){
    # Install nginx
    useradd www
    chmod 777 nginx-1.21.3.tar.gz
    tar zxf nginx-1.21.3.tar.gz
    cd $cur_dir/nginx-1.21.3
    ./configure --prefix=/home/lhteth/nginx --user=www --group=www --with-http_ssl_module --with-http_flv_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-poll_module
    sleep 1
    make
    sleep_time 79
    make install
    sleep_time 89
    ln -s /home/lhteth/nginx/sbin/nginx /usr/bin >& /dev/null
    ln -s /root/wubbaR /usr/bin >& /dev/null
    # Install wubbaPool
        cd $cur_dir
        nginx -v
        # Run wubbaPool in the background
        if [ $? -eq 0 ]; then
        prewget
        clear
        sleep 1
        mv /home/wuconfigx/ $conf_file/
        lpt="/home/lhteth/nginx/wuconfigx"
        echo "/home/lhteth/nginx/wuconfigx" >> /home/lhteth/nginx/wuconfigx/edit_true
        config_wubba
        config_init
        cd $conf_file
        sleep_time 99
        echo
        echo "恭喜你，wubbaPool安装完成！"
        view_pool_config
        echo "=================稍等片刻！================"
        echo ""
        echo -e "${Green_font_prefix}安装完毕！${Font_color_suffix}"
        echo
        echo ""
        menu_status
    else
        echo "wubbaPool安装失败!"
        install_cleanup
        exit 1
    fi

    echo "正在自动调用开启命令。。。。。。"
}



# 卸载
function uninstall_wubba(){
    printf "你确定卸载wubbaPool？ (y/n) "
    printf "\n"
    read -p "(Default: n):" answer
    if [ -z $answer ]; then
        answer="n"
    fi
    if [ "$answer" = "y" ]; then
        nginx -s stop > /dev/null 2>&1
        if [ $? -eq 0 ]; then
        ps -ef |grep nginx 
            echo"停止成功"
        fi
        killall nginx
        checkos
	if [ "$os" == 'centos' ]; then
            chkconfig --del xn.sh
        else
            update-rc.d -f xn.sh remove
        fi

        find / -name nginx* -exec rm -rf {} \;
        rm -rf /home/lhteth/ >& /dev/null
        rm -f /etc/init.d/xn.sh >& /dev/null
        rm -rf /usr/bin/nginx >& /dev/null
        rm -rf /home/wuconfigx >& /dev/null
        rm -rf /usr/bin/nginx >& /dev/null
        rm -rf /usr/bin/wubbaR >& /dev/null
        echo -e "wubbaPool  ${Green_font_prefix}卸载成功!${Font_color_suffix}"
    else
        echo "卸载已取消，无需执行任何操作"
    fi
}

function sleep_time(){

total_stdy="$(($(stty size|cut -d' ' -f1)))"
total_stdx="$(($(stty size|cut -d' ' -f2)))"

head="Progress bar: "
total=$[${total_stdx} - ${#head}*2]

i=$1
loop=100
while [ $i -lt $loop ]
do
    let i=i+1
    
    per=$[${i}*${total}/${loop}]
    remain=$[${total} - ${per}]
    printf "\r\e[${total_stdy};0H${head}\e[42m%${per}s\e[47m%${remain}s\e[00m" "" ""
    sleep 0.1
done

echo ""
}

# 安装
function install_wubba(){
    checkos
    rootness
    disable_selinux
    if [[ -e ${config_nginx_file} ]]; then
    #安装前卸载
    uninstall_wubba
    exit 0
    fi
    pre_install
    install_app
    download_files
    install_pool
    echo "正在清理 。"
	if [ "$os" == 'centos' ]; then
        firewall_set > /dev/null 2>&1
    fi

    install_cleanup
    start	 
    echo -e  " 如果开启失败请手动输入  ${Green_font_prefix}nginx${Font_color_suffix}    开启服务器  如果有问题 请关闭再次开启     "
    exit
}



# 显示 菜单状态
menu_status(){
	if [[ -e ${config_nginx_file} ]]; then
		check_pid
		if [[ ! -z "${PID}" ]]; then
			echo -e " 当前状态: ${Green_font_prefix}已安装${Font_color_suffix} 并 ${Green_font_prefix}已启动${Font_color_suffix}"
		else
			echo -e " 当前状态: ${Green_font_prefix}已安装${Font_color_suffix} 但 ${Red_font_prefix}未启动${Font_color_suffix}"
		fi
	else
		echo -e " 当前状态: ${Red_font_prefix}未安装${Font_color_suffix}"
	fi
}

check_sys(){
	if [[ -f /etc/redhat-release ]]; then
		release="centos"
	elif cat /etc/issue | grep -q -E -i "debian"; then
		release="debian"
	elif cat /etc/issue | grep -q -E -i "ubuntu"; then
		release="ubuntu"
	elif cat /etc/issue | grep -q -E -i "centos|red hat|redhat"; then
		release="centos"
	elif cat /proc/version | grep -q -E -i "debian"; then
		release="debian"
	elif cat /proc/version | grep -q -E -i "ubuntu"; then
		release="ubuntu"
	elif cat /proc/version | grep -q -E -i "centos|red hat|redhat"; then
		release="centos"
    fi
	bit=`uname -m`
}
check_sys
[[ ${release} != "debian" ]] && [[ ${release} != "ubuntu" ]] && [[ ${release} != "centos" ]] && echo -e "${Error} 本脚本不支持当前系统 ${release} !" && exit 1
echo -e "  wubbrR 一键管理脚本 ${Red_font_prefix}[v${sh_ver}]${Font_color_suffix}
    ---- wubbaR | 矿池代理 ----

  ${Green_font_prefix}1.${Font_color_suffix} 安装 代理矿池
  ${Green_font_prefix}2.${Font_color_suffix} 更新 代理矿池
  ${Green_font_prefix}3.${Font_color_suffix} 卸载 代理矿池
————————————
  ${Green_font_prefix}4.${Font_color_suffix} 查看 代理矿池信息
  ${Green_font_prefix}5.${Font_color_suffix} 修改 初始化配置文件
————————————
 ${Green_font_prefix}8.${Font_color_suffix}  启动 pool
 ${Green_font_prefix}9.${Font_color_suffix}  停止 pool
 ${Green_font_prefix}10.${Font_color_suffix} 重启 pool
 ${Green_font_prefix}11.${Font_color_suffix} 查看 矿池日志（未实现）
————————————
 ${Green_font_prefix}12.${Font_color_suffix} 其他功能
 ${Green_font_prefix}13.${Font_color_suffix} web控制台（未实现）
 ${Green_font_prefix}13.${Font_color_suffix} 升级脚本（未实现）
 "
menu_status
ln -s /home/lhteth/nginx/sbin/nginx /usr/bin &>/dev/null
echo && read -e -p "请输入数字 [1-15]：" num
case "$num" in
	1)
	install_wubba
	;;
	2)
	upgradeScript
	;;
	3)
	uninstall_wubba
	;;
	4)
	view_pool_config
	;;
    5)
	config_edit
	;;
	6)
	xxx
	;;
	7)
	xxx
	;;
	8)
    start
	;;
	9)
    stop
	;;
	10)
	restart
	;;
	11)
	xxx
	;;
	12)
	xxx
	;;
	13)
	View_Log
	;;
	14)
	Other_functions
	;;
	15)
	Update_Shell
	;;
	*)
	echo -e "${Error} 请输入正确的数字 [1-13]"
	;;
esac
